// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test BotCustomResource construct 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters88959b7effe4c39022b79f796c86815bdb404105dc42ca7539a0d0caea60335cArtifactHash122AA4DF": Object {
      "Description": "Artifact hash for asset \\"88959b7effe4c39022b79f796c86815bdb404105dc42ca7539a0d0caea60335c\\"",
      "Type": "String",
    },
    "AssetParameters88959b7effe4c39022b79f796c86815bdb404105dc42ca7539a0d0caea60335cS3BucketC2C9266F": Object {
      "Description": "S3 bucket for asset \\"88959b7effe4c39022b79f796c86815bdb404105dc42ca7539a0d0caea60335c\\"",
      "Type": "String",
    },
    "AssetParameters88959b7effe4c39022b79f796c86815bdb404105dc42ca7539a0d0caea60335cS3VersionKey4000C8A8": Object {
      "Description": "S3 key for asset version \\"88959b7effe4c39022b79f796c86815bdb404105dc42ca7539a0d0caea60335c\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "BotCustomResourceCreateBotConfigDD6462EE": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ApiId": "botApiId",
        "ApiStageName": "prod",
        "ApiUri": "apiUrl",
        "AwsId": Object {
          "Ref": "AWS::AccountId",
        },
        "AwsRegion": Object {
          "Ref": "AWS::Region",
        },
        "BotGender": "Male",
        "BotLanguage": "English",
        "BotName": "Joe",
        "BrainBucket": "BrainBucketName",
        "CognitoIdentityPool": "cognitoIdentityPool",
        "CognitoUserPoolClientId": "cognitoUserPoolClientId",
        "CognitoUserPoolId": "cognitoUserPoolId",
        "ContextTable": "contextTable",
        "ConversationLogsTable": "conversationLogsTable",
        "EntitiesTable": "entitiesTable",
        "SampleLeaveFeedbackBotArn": "sampleLeaveFeedbackBotArn",
        "SampleOrderPizzaBotArn": "sampleOrderPizzaBotArn",
        "SampleWeatherForecastBotArn": "sampleWeatherForecastBotArn",
        "SampleWebClientBucket": "sampleWebClientBucketName",
        "SampleWebclientPackage": "webClientPackageUrl",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BotCustomResourceLambdaFunction33A318F8",
            "Arn",
          ],
        },
        "StackName": Object {
          "Ref": "AWS::StackName",
        },
        "TrainModelArn": "trainModelArn",
      },
      "Type": "Custom::CreateBotConfig",
      "UpdateReplacePolicy": "Delete",
    },
    "BotCustomResourceCustomResourcePolicyC3C17F7B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:cloudformation:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stack/",
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:ListBucket",
                "s3:GetBucketLocation",
                "s3:GetBucketNotification",
                "s3:PutBucketNotification",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::BrainBucketName",
            },
            Object {
              "Action": Array [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::BrainBucketName/*",
            },
            Object {
              "Action": Array [
                "s3:ListBucket",
                "s3:GetBucketLocation",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::sampleWebClientBucketName",
            },
            Object {
              "Action": Array [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::sampleWebClientBucketName/*",
            },
            Object {
              "Action": "apigateway:POST",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:apigateway:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "::/restapis/botApiId/deployments",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BotCustomResource",
        "Roles": Array [
          Object {
            "Ref": "BotCustomResourceLambdaFunctionServiceRoleF373E1F0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BotCustomResourceLambdaFunction33A318F8": Object {
      "DependsOn": Array [
        "BotCustomResourceLambdaFunctionServiceRoleDefaultPolicy8E082A32",
        "BotCustomResourceLambdaFunctionServiceRoleF373E1F0",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters88959b7effe4c39022b79f796c86815bdb404105dc42ca7539a0d0caea60335cS3BucketC2C9266F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters88959b7effe4c39022b79f796c86815bdb404105dc42ca7539a0d0caea60335cS3VersionKey4000C8A8",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters88959b7effe4c39022b79f796c86815bdb404105dc42ca7539a0d0caea60335cS3VersionKey4000C8A8",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "Function to configure Bot Files",
        "Environment": Object {
          "Variables": Object {
            "REGION": Object {
              "Ref": "AWS::Region",
            },
            "SEND_ANONYMOUS_USAGE_DATA": "Yes",
            "SOLUTION_ID": "SolutionId",
            "UUID": "UUID",
            "VERSION": "version",
          },
        },
        "Handler": "index.lambda_handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "BotCustomResourceLambdaFunctionServiceRoleF373E1F0",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 180,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "BotCustomResourceLambdaFunctionServiceRoleDefaultPolicy8E082A32": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BotCustomResourceLambdaFunctionServiceRoleDefaultPolicy8E082A32",
        "Roles": Array [
          Object {
            "Ref": "BotCustomResourceLambdaFunctionServiceRoleF373E1F0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BotCustomResourceLambdaFunctionServiceRoleF373E1F0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
